BYTE MEMAC_B_CTL_D6 = $D65D
BYTE MEMAC_B_CTL_D7 = $D75D
BYTE MEMAC_B = $4000

BYTE FUNC vbxe_detect()
    BYTE OLD_MEMAC, NEW_MEMAC

    MEMAC_B_CTL_D6 = 0
    OLD_MEMAC = MEMAC_B
    MEMAC_B_CTL_D6 = $80
    NEW_MEMAC = MEMAC_B
    MEMAC_B_CTL_D6 = 0
    IF OLD_MEMAC <> NEW_MEMAC THEN
        RETURN ($D6)
    FI
    MEMAC_B_CTL_D7 = 0
    OLD_MEMAC = MEMAC_B
    MEMAC_B_CTL_D7 = $80
    NEW_MEMAC = MEMAC_B
    MEMAC_B_CTL_D7 = 0
    IF OLD_MEMAC <> NEW_MEMAC THEN
        RETURN($D7)
    FI
RETURN (0)    

BYTE FUNC vbxe_core_magic(BYTE page)
    BYTE POINTER magic_ptr
    magic_ptr=page*256+$40
RETURN (magic_ptr^)

BYTE FUNC vbxe_is_rambo(BYTE page)
    BYTE POINTER rambo_ptr
    rambo_ptr=page*256+$41
RETURN (rambo_ptr^ RSH 7)

BYTE FUNC vbxe_core_rev(BYTE page)
    BYTE POINTER rev_ptr
    BYTE rev
    rev_ptr=page*256+$41
    rev = (rev_ptr^&$0F) + 10 * ((rev_ptr^&$70) RSH 4)
RETURN (rev)
; 
PROC set_memac_b(BYTE page, BYTE cpu, BYTE antic, BYTE bank)
    BYTE POINTER memb_ptr
    memb_ptr=page*256+$5D
    IF bank > 15 THEN
        bank = 15
    FI
    memb_ptr^ = bank
    IF cpu THEN
        memb_ptr^ ==+ $80
    FI
    IF antic THEN
        memb_ptr^ ==+ $40
    FI
RETURN

PROC Main()
    BYTE vbxe_page = [0]
    BYTE magic = [0]
    BYTE rev = [0]    
    BYTE POINTER rev_ptr
    vbxe_page = vbxe_detect()
    rev_ptr = vbxe_page*256+$41
    IF vbxe_page = 0 THEN
        PRINTE("VBXE not detected.")
        RETURN
    ELSE
        PRINTF("VBXE under %H%E", vbxe_page*256)
    FI
    magic = vbxe_core_magic(vbxe_page)
    IF vbxe_page <> 0 THEN
        PRINTF("VBXE's magic number is: %H%E", magic)
        PRINTF("Revision byte: %H %E", rev_ptr^)
        IF vbxe_is_rambo(vbxe_page) THEN
            PRINTE("Rambo emulation enabled.")
        ELSE
            PRINTE("Rambo emulation disabled.")
        FI
        rev = vbxe_core_rev(vbxe_page)
        PRINTF("Revision number: %I%E", rev)

        ;Turn the XDL on
        ;rev_ptr = vbxe_page*256+$40
        ;rev_ptr^ = 1
    FI    
RETURN
